services:

  kong-database:
    image: postgres:13
    container_name: kong-database
    hostname: kong-database
    restart: always
    environment:
      POSTGRES_USER: kong
      POSTGRES_PASSWORD: kong
      POSTGRES_DB: kong
    volumes:
      - kong-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "kong"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - kong-network

  kong-migration:
    image: kong:3.4
    container_name: kong-migration
    hostname: kong-migration
    command: kong migrations bootstrap
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kong
      KONG_CASSANDRA_CONTACT_POINTS: kong-database
    restart: on-failure:5
    depends_on:
      - kong-database
    networks:
      - kong-network

  kong:
    image: kong:3.4
    container_name: kong
    hostname: kong
    restart: always
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kong
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: 0.0.0.0:8001
      KONG_PROXY_LISTEN: 0.0.0.0:8000
      KONG_PLUGINS: bundled,rate-limiting,jwt,acl,key-auth
    ports:
      - "8000:8000"  # Proxy
      - "8001:8001"  # Admin API
      - "8443:8443"  # Proxy SSL
      - "8444:8444"  # Admin SSL
    depends_on:
      - kong-database
      - kong-migration
    networks:
      - kong-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend
    hostname: backend
    restart: always
    environment:
      - KONG_ADMIN_URL=http://kong:8001
      - KONG_ADMIN_TIMEOUT=5000
      - KONG_ADMIN_RETRY_ATTEMPTS=3
    ports:
      - "8080:8080"
    depends_on:
      - kong
    networks:
      - kong-network

volumes:
  kong-data:

networks:
  kong-network:
    driver: bridge